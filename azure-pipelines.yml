# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

name: $(Date:yyyyMMdd)$(Rev:rrrr)

trigger:
- master

variables:
  BUILD_NUMBER: '$(Build.BuildNumber)'
  STAGING: '$(Build.ArtifactStagingDirectory)'

jobs:
- job: Linux
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  # - task: DotNetCoreInstaller@0
  #   displayName: Installing .NET Core 3 SDK
  #   inputs:
  #     packageType: 'sdk' # Options: runtime, sdk
  #     version: '3.0.100-preview3-010431' 
  # - bash: |
  #    wget -q https://packages.microsoft.com/config/ubuntu/16.04/packages-microsoft-prod.deb
  #    sudo dpkg -i packages-microsoft-prod.deb
  #    sudo apt-get install apt-transport-https
  #    sudo apt-get update
  #    sudo apt-get install dotnet-sdk-2.2
  #    sudo apt-get install dotnet-sdk-2.1
  #   displayName: Manually install .NET Core 2.2 SDK
  - template: azure-setup.yml  # Template referenc

- job: Windows
  pool:
    vmImage: 'windows-2019'
  steps:
  - template: azure-setup.yml  # Template reference
  - script: |
      codecov -f "$(System.DefaultWorkingDirectory)/src/Snowflake.Framework.Tests/coverage.opencover.xml" -t 82f2a4f6-6167-45f5-bc8b-8b10f601dab4 --sha $(Build.SourceVersion) --build $(Build.BuildNumber)
    displayName: Publishing test coverage to Codecov 

  - task: PublishCodeCoverageResults@1
    displayName: Publshing test coverage to Azure
    inputs:
      codeCoverageTool: 'cobertura' # Options: cobertura, jaCoCo
      summaryFileLocation: $(System.DefaultWorkingDirectory)/src/Snowflake.Framework.Tests/coverage.cobertura.xml

  - task: PublishBuildArtifacts@1
    displayName: Publishing build artifacts
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
      artifactName: 'drop'
  - task: NuGetCommand@2
    displayName: 'Publish framework packages to snowflake-nightly'
    inputs:
      command: push
      nuGetFeedType: external
      publishFeedCredentials: 'snowflake-nightly'
      packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
